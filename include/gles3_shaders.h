//TODO make is gles3 compatible
static const char* POS_SHADER_vcode =
"#version 150 core\n"
"in vec3 i_pos;\n"
"uniform mat4 u_projectionMatrix;\n"
"uniform mat4 u_modelViewMatrix;\n"
"\n"
"void main()\n"
"{\n"
"   gl_Position = u_projectionMatrix * u_modelViewMatrix * vec4(i_pos, 1.0);\n"
"}\n"
;
//TODO make is gles3 compatible
static const char* POS_SHADER_fcode =
"#version 150 core\n"
"out vec4 o_fragColor;\n"
"uniform vec4 u_color;\n"
"uniform sampler2D u_textures[16];\n"
"\n"
"void main()\n"
"{\n"
"   o_fragColor = u_color;\n"
"}\n"
;

static const char* POS_UV_SHADER_vcode =
"#version 300 es\n"
"in mediump vec3 i_pos;\n"
"in mediump vec2 i_uv;\n"
"out mediump vec2 b_uv;\n"
"uniform mediump mat4 u_projectionMatrix;\n"
"uniform mediump mat4 u_modelViewMatrix;\n"
"\n"
"void main()\n"
"{\n"
"   gl_Position = u_projectionMatrix * u_modelViewMatrix * vec4(i_pos, 1.0);\n"
"   b_uv = i_uv;\n"
"}\n"
;

static const char* POS_UV_SHADER_fcode =
"#version 300 es\n"
"in mediump vec2 b_uv;\n"
"out mediump vec4 o_fragColor;\n"
"uniform mediump vec4 u_color;\n"
"uniform sampler2D u_textures[16];\n"
"\n"
"void main()\n"
"{\n"
"   o_fragColor = u_color * texture(u_textures[0], b_uv);\n"
"}\n"
;
//TODO make is gles3 compatible
static const char* POS_COLOR_SHADER_vcode =
"#version 150 core\n"
"in vec3 i_pos;\n"
"in vec4 i_color;\n"
"out vec4 b_color;\n"
"uniform mat4 u_projectionMatrix;\n"
"uniform mat4 u_modelViewMatrix;\n"
"\n"
"void main()\n"
"{\n"
"   gl_Position = u_projectionMatrix * u_modelViewMatrix * vec4(i_pos, 1.0);\n"
"   b_color = i_color;\n"
"}\n"
;
//TODO make is gles3 compatible
static const char* POS_COLOR_SHADER_fcode =
"#version 150 core\n"
"in vec4 b_color;\n"
"out vec4 o_fragColor;\n"
"uniform vec4 u_color;\n"
"uniform sampler2D u_textures[16];\n"
"\n"
"void main()\n"
"{\n"
"   o_fragColor = u_color * b_color;\n"
"}\n"
;
//TODO make is gles3 compatible
static const char* POS_UV_COLOR_TEXID_SHADER_vcode =
"#version 300 es\n"
"in mediump vec3 i_pos;\n"
"in mediump vec2 i_uv;\n"
"in mediump vec4 i_color;\n"
"in mediump float i_texID;\n"
"out mediump vec2 b_uv;\n"
"out mediump vec4 b_color;\n"
"out mediump float b_texID;\n"
"uniform mediump mat4 u_projectionMatrix;\n"
"uniform mediump mat4 u_modelViewMatrix;\n"
"\n"
"void main()\n"
"{\n"
"   gl_Position = u_projectionMatrix * u_modelViewMatrix * vec4(i_pos, 1.0);\n"
"   b_uv = i_uv;\n"
"   b_color = i_color;\n"
"   b_texID = i_texID;\n"
"}\n"
;
//TODO make it gles3 compatible
static const char* POS_UV_COLOR_TEXID_SHADER_fcode =
"#version 300 es\n"
"in mediump vec2 b_uv;\n"
"in mediump vec4 b_color;\n"
"in mediump float b_texID;\n"
"out mediump vec4 o_fragColor;\n"
"uniform mediump vec4 u_color;\n"
"uniform sampler2D u_textures[16];\n"
"\n"
"mediump vec4 sampleFromTexUnit(int unit)\n"
"{\n"
"   if(unit == 1)     return texture(u_textures[0], b_uv);\n"
"   else if(unit == 2) return texture(u_textures[1], b_uv);\n"
"   else if(unit == 3) return texture(u_textures[2], b_uv);\n"
"   else if(unit == 4) return texture(u_textures[3], b_uv);\n"
"   else if(unit == 5) return texture(u_textures[4], b_uv);\n"
"   else if(unit == 6) return texture(u_textures[5], b_uv);\n"
"   else if(unit == 7) return texture(u_textures[6], b_uv);\n"
"   else if(unit == 8) return texture(u_textures[7], b_uv);\n"
"   else if(unit == 9) return texture(u_textures[8], b_uv);\n"
"   else if(unit == 10) return texture(u_textures[9], b_uv);\n"
"   else if(unit == 11) return texture(u_textures[10], b_uv);\n"
"   else if(unit == 12) return texture(u_textures[11], b_uv);\n"
"   else if(unit == 13) return texture(u_textures[12], b_uv);\n"
"   else if(unit == 14) return texture(u_textures[13], b_uv);\n"
"   else if(unit == 15) return texture(u_textures[14], b_uv);\n"
"   else if(unit == 16) return texture(u_textures[15], b_uv);\n"
"   return vec4(1.0);\n"
"}\n"
"\n"
"void main()\n"
"{\n"
"   mediump vec4 textureColor = sampleFromTexUnit(int(b_texID));\n"
"   o_fragColor = u_color * b_color * textureColor;\n"
"}\n"
;